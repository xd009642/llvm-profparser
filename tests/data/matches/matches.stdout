    1|      1|pub enum LibType {
    2|       |    A(usize),
    3|       |    B(usize),
    4|       |}
    5|       |
    6|      2|pub fn check_libtype_match(lt: LibType) -> usize {
    7|      2|    match lt {
    8|      1|        LibType::A(n) => n,
    9|      1|        LibType::B(n) => n,
   10|       |    }
   11|      2|}
   12|       |
   13|       |pub fn check_match(x: usize) -> usize {
   14|      2|    match x {
   15|      1|        0 => 1,
   16|      3|        1...5 => 2,
   17|      1|        6 | 8 => 3,
   18|      1|        x if x % 2 == 0 => x,
   19|      1|        _ => 0,
   20|       |    }
   21|      5|}
   22|       |
   23|      4|pub fn destructuring_match(x: u32, y: u32) {
   24|      4|    let _y = match (x, y) {
   25|      1|        (1, _) => 1,
   26|      1|        (_, 1) => 1,
   27|      1|        (2, 2) => 2,
   28|      1|        _ => 0,
   29|       |    };
   30|      4|}
   31|       |
   32|       |#[cfg(test)]
   33|       |mod tests {
   34|       |    use super::*;
   35|       |
   36|      1|    #[test]
   37|      1|    fn it_works() {
   38|      1|        check_libtype_match(LibType::A(0));
   39|      1|        check_libtype_match(LibType::B(1));
   40|      1|
   41|      1|        check_match(0);
   42|      1|        check_match(2);
   43|      1|        check_match(999999);
   44|      1|        check_match(8);
   45|      1|        check_match(9998);
   46|      1|
   47|      1|        destructuring_match(1, 3);
   48|      1|        destructuring_match(2, 1);
   49|      1|        destructuring_match(2, 2);
   50|      1|        destructuring_match(3, 2);
   51|      1|    }
   52|       |}

